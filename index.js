// index.js ‚Äî backend + –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
import 'dotenv/config';
import express from 'express';
import TelegramBot from 'node-telegram-bot-api';
import path from 'node:path';
import { fileURLToPath } from 'node:url';

const __filename = fileURLToPath(import.meta.url);
const __dirname  = path.dirname(__filename);

const PORT       = process.env.PORT      || 3000;
const BOT_TOKEN  = process.env.BOT_TOKEN || '';
const WEBAPP_URL = process.env.WEBAPP_URL || 'https://example.com';

// 1) HTTP-—Å–µ—Ä–≤–µ—Ä + —Ä–∞–∑–¥–∞—á–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ (Vite build –≤ –ø–∞–ø–∫–µ /dist)
const app = express();
app.use(express.static(path.join(__dirname, 'dist')));
app.get('/health', (_req, res) => res.send('OK'));

app.listen(PORT, () => console.log(`Express listening on ${PORT}`));

// 2) Telegram-–±–æ—Ç (long polling)
const bot = new TelegramBot(BOT_TOKEN, { polling: true });

// /start ‚Üí –∫–Ω–æ–ø–∫–∞ ¬´–ü–µ—Ä–µ–π—Ç–∏ –≤ –≤–∏—Ç—Ä–∏–Ω—É¬ª
bot.onText(/\/start/, (msg) => {
  bot.sendMessage(msg.chat.id, '–û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω', {
    reply_markup: {
      inline_keyboard: [
        [{ text: '–ü–µ—Ä–µ–π—Ç–∏ –≤ –≤–∏—Ç—Ä–∏–Ω—É üõí', web_app: { url: WEBAPP_URL } }]
      ]
    }
  });
});

// echo-–æ—Ç–≤–µ—Ç –¥–ª—è –≤—Å–µ—Ö –ø—Ä–æ—á–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('message', (msg) => {
  if (msg.text?.startsWith('/start')) return;
  bot.sendMessage(msg.chat.id, `–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: ${msg.text}`);
});
