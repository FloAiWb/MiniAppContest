// index.js  ‚Äì –≤—Å—ë, —á—Ç–æ –Ω—É–∂–Ω–æ –±–æ—Ç—É –Ω–∞ –¥–∞–Ω–Ω–æ–º —ç—Ç–∞–ø–µ
import 'dotenv/config';
import express from 'express';
import TelegramBot from 'node-telegram-bot-api';

const app   = express();
const port  = process.env.PORT  || 3000;           // Render –ø–µ—Ä–µ–¥–∞—Å—Ç —Å–≤–æ–π –ø–æ—Ä—Ç
const token = process.env.BOT_TOKEN;               // –¢–æ–∫–µ–Ω –±–æ—Ç–∞
const site  = process.env.SITE_URL;                // üëâ URL –≤–∏—Ç—Ä–∏–Ω—ã

// ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
// 1.  Health-check
app.get('/', (_req, res) => res.send('OK ‚Äî bot running'));
app.listen(port, () => console.log(`‚úÖ  Express & Telegram Webhook listening on :${port}`));

// 2.  Telegram-–±–æ—Ç (long polling, —Ç–∞–∫ –ø—Ä–æ—â–µ –≤—Å–µ–≥–æ)
const bot = new TelegramBot(token, { polling: true });

// /start  ‚Äì —à–ª—ë–º –∫–Ω–æ–ø–∫—É-WebApp
bot.onText(/\/start/i, (msg) => {
  const chatId = msg.chat.id;

  const keyboard = {
    reply_markup: {
      inline_keyboard: [
        [
          {
            text: 'üõç  –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω',
            web_app: { url: site }        // ‚Üê Telegram –æ—Ç–∫—Ä–æ–µ—Ç –≤–∏—Ç—Ä–∏–Ω—É –≤–Ω—É—Ç—Ä–∏ —á–∞—Ç–∞
          }
        ]
      ]
    }
  };

  bot.sendMessage(chatId, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É üëá', keyboard);
});

// (–ø–æ–∑–∂–µ: –æ–±—Ä–∞–±–æ—Ç–∫–∞ WebAppData, –æ–ø–ª–∞—Ç –∏ —Ç.–¥.)
